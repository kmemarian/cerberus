(include_subdirs unqualified)

(library
 (name cerb_frontend)
 (public_name cerberus-lib.frontend)
 (synopsis "Cerberus frontend")
 (flags (:standard -w @8@11@12-9-27-33-67))
 (modules :standard \ pp_naive_memory pp_symbolic pp_constraints pp_cmm pp_sb)
 (virtual_modules impl_mem)
 (libraries unix lem pprint cerberus-lib.util sibylfs))

(rule
 (targets version.ml)
 (deps (universe))
 (action
  (with-stdout-to version.ml
    (run ocaml -I +unix unix.cma %{dep:../tools/gen_version.ml})))
 (mode fallback))

(copy_files
  (files ../frontend/model/*.lem))
(copy_files
  (files ../frontend/model/ail/*.lem))
(copy_files
  (files ../frontend/concurrency/{cmm_csem.lem,cmm_op.lem,linux.lem}))

(rule
 (targets
  lem_global.ml
  lem_loc.ml
  lem_debug.ml
  lem_decode.ml
  ;
  utils.ml
  annot.ml
  bimap.ml
  dlist.ml
  enum.ml
  state.ml
  symbol.ml
  exception.ml
  product.ml
  float.ml
  any.ml
  ;
  cn.ml
  cn_desugaring.ml
  cabs.ml
  undefined.ml
  constraint.ml
  integerType.ml
  ctype.ml
  ;
  typingError.ml
  errorMonad.ml
  ailSyntax.ml
  genTypes.ml
  ;
  ctype_aux.ml
  ;
  builtins.ml
  formatted.ml
  pp.ml
  implementation.ml
  ;
  mem_common.ml
  defacto_memory_types.ml
  defacto_memory_aux.ml
  defacto_memory.ml
  mem.ml
  mem_aux.ml
  ;
  boot.ml
  exception_undefined.ml
  multiset.ml
  state_exception.ml
  state_exception_undefined.ml
  std.ml
  monadic_parsing.ml
  fs.ml
  trace_event.ml
  cerb_attributes.ml
  ;
  nondeterminism.ml
  ;
  cmm_aux.ml
  ;
  cmm_csem.ml
  cmm_op.ml
  linux.ml
  ;
  core.ml
  errors.ml
  core_aux.ml
  core_linking.ml
  ;
  core_typing.ml
  core_typing_aux.ml
  core_typing_effect.ml
  ;
  range.ml
  integerImpl.ml
  ailTypesAux.ml
  ailSyntaxAux.ml
  ailWf.ml
  ailTyping.ml
  genTypesAux.ml
  genTyping.ml
  ;
  cabs_to_ail_aux.ml
  scope_table.ml
  desugaring_init.ml
  cabs_to_ail_effect.ml
  cabs_to_ail.ml
  mini_pipeline.ml
  ;
  core_sequentialise.ml
  core_indet.ml
  core_rewrite.ml
  core_unstruct.ml
  ;
  core_run_aux.ml
  core_eval.ml
  core_run.ml
  core_reduction.ml
  core_reduction_aux.ml
  driver.ml
  ;
  translation_effect.ml
  translation_aux.ml
  translation.ml
 )
 (deps
  (:lem_renamed
   global.lem
   loc.lem
   debug.lem
   decode.lem)
  (:lem_prelude
   utils.lem
   annot.lem
   bimap.lem
   dlist.lem
   enum.lem
   state.lem
   symbol.lem
   exception.lem
   product.lem
   float.lem
   any.lem)
  (:lem_cn
   cn.lem
   cn_desugaring.lem)
  (:lem_cabs
   cabs.lem
   undefined.lem
   constraint.lem
   integerType.lem
   ctype.lem)
  (:lem_ail
   typingError.lem
   errorMonad.lem
   ailSyntax.lem
   genTypes.lem)
  (:lem_ctype_aux
   ctype_aux.lem)
  builtins.lem
  formatted.lem
  pp.lem
  implementation.lem
  (:lem_defacto
   mem_common.lem
   defacto_memory_types.lem
   defacto_memory_aux.lem
   defacto_memory.lem
   mem.lem
   mem_aux.lem)
  (:lem_utils
   boot.lem
   exception_undefined.lem
   multiset.lem
   state_exception.lem
   state_exception_undefined.lem
   std.lem monadic_parsing.lem
   fs.lem
   trace_event.lem
   cerb_attributes.lem)
  nondeterminism.lem
  (:lem_conc_interf
   cmm_aux.lem)
  (:lem_conc
   cmm_csem.lem
   cmm_op.lem
   linux.lem)
  (:lem_core
   core.lem
   errors.lem
   core_aux.lem
   core_linking.lem)
  (:lem_core_typing
   core_typing.lem
   core_typing_aux.lem
   core_typing_effect.lem)
  (:lem_ail_typing
   range.lem
   integerImpl.lem
   ailTypesAux.lem
   ailSyntaxAux.lem
   ailWf.lem
   ailTyping.lem
   genTypesAux.lem
   genTyping.lem)
  (:lem_cabs_to_ail
   cabs_to_ail_aux.lem
   scope_table.lem
   desugaring_init.lem
   cabs_to_ail_effect.lem
   cabs_to_ail.lem
   mini_pipeline.lem)
  (:lem_core_to_core
   core_sequentialise.lem
   core_indet.lem
   core_rewrite.lem
   core_unstruct.lem)
  (:lem_core_dynamics
   core_run_aux.lem
   core_eval.lem
   core_run.lem
   core_reduction.lem
   core_reduction_aux.lem
   driver.lem)
  (:lem_elaboration
   translation_effect.lem
   translation_aux.lem
   translation.lem)
  )
  (action
   (progn
    (run ./build_lem.sh %{deps})
    (run ../tools/sedi.sh -e "1 s/\\(.*\\)/[@@@warning \"-8\"]\\n\\1/" cmm_csem.ml)
    (run ../tools/sedi.sh -e "1 s/\\(.*\\)/[@@@warning \"-8\"]\\n\\1/" cmm_op.ml)
   )
  )
)
